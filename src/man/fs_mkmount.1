fs mkmount                 AFS Commands              fs mkmount


NAME

   fs mkmount -- create a mount point for a volume.


   fs mkmount -dir <directory> -vol <volume name>  [-cell <cell
   name>]    [-rw]  [-fast]  [-root]  [-help]

ACCEPTABLE ABBREVIATIONS/ALIASES

   fs mk -d <directory> -v <volume name> [-c <cell name>]
   [-rw]  [-f]  [-ro]  [-h]

DESCRIPTION

   Creates a mount point called directory for the volume volume
   name.  The volume's root directory is also named  directory.
   Mount  points look and act just like standard UNIX directory
   structures, because when  the  Cache  Manager  encounters  a
   mount point directory in a pathname, it knows to look in the
   indicated volume for the elements listed under directory.

   It is possible, although not  recommended,  to  create  more
   than one mount point to a volume.

   Types of mount points

   There  are  several  types  of  mount  points, because mount
   points can vary along three dimensions.  The following  will
   discuss  the  three  dimensions in turn, explaining how they
   affect the  Cache  Manager's  interpretation  of  the  mount
   point.

   Dimension 1: Volume Type

   The   first   dimension   concerns   which  type  of  volume
   (ReadWrite, ReadOnly or Backup) is named in the mount point.
   ReadOnly and Backup volumes are distinguished by a .readonly
   or .backup extension, respectively.    When  a  mount  point
   names  a  volume  with  either  extension, the Cache Manager
   accesses the specified volume  only,  ignoring  Dimension  2
   (the mount point's type).  In other words, the Cache Manager
   will never access the ReadWrite version of a volume  if  the
   mount point explicitly names the ReadOnly or Backup version.
   If the named ReadOnly or Backup volume is inaccessible,  the
   Cache Manager reports an error.

   If  the  volume name does not include a .backup or .readonly
   extension, then the volume is ReadWrite.  The Cache  Manager
   considers Dimension 2.

   Dimension 2: Mount Point Type

   Note:   This  dimension  is  relevant  only  if  the  volume
   indicated in the mount point is ReadWrite.  Only Dimension 1
   is relevant if the named volume is ReadOnly or Backup.

   The second dimension concerns whether the mount point itself
   is "regular" or "ReadWrite":

      - When the Cache Manager encounters a regular  mount



        point (one naming a ReadWrite volume), it tries to
        access a copy of the volume that is of  same  type
        (ReadWrite or ReadOnly) as the volume which houses
        the mount point.  If there is  no  volume  of  the
        same  type,  it  will  access  the  type  that  is
        available.

        Almost all mount points are of  this  type.    Its
        advantage  is  that  the  Cache Manager is free to
        access the most  readily  available  form  of  the
        volume.    When  the  Cache  Manager  starts  in a
        ReadOnly volume, this type of  mount  point  means
        that  it traverses a "ReadOnly path," which can be
        efficient because no callbacks are necessary.

        The  issuer  creates  a  regular  mount  point  by
        providing   only   the   required  -dir  and  -vol
        arguments.

      - When the  Cache  Manager  encounters  a  ReadWrite
        mount   point,  it  accesses  only  the  ReadWrite
        version of the indicated volume.    (This  assumes
        that  the  volume  does  not  have  a  .backup  or
        .readonly  extension.    Mounting  a   Backup   or
        ReadOnly  volume  with  a ReadWrite mount point is
        possible but unnecessary,  as  the  Cache  Manager
        handles those volume types in the same way whether
        their mount point is regular or  ReadWrite.    See
        Dimension 1.)

        A ReadWrite mount point is generally used to mount
        only one volume in a cell: its root.cell volume at
        the  second  level  in  the  file tree, just below
        /afs.  Conventionally, root.cell is  also  mounted
        with  a regular mount point at the same level. The
        two  mount  points  are   distinguished   by   the
        placement   of  a  period  at  the  start  of  the
        ReadWrite mount point's  name  (see  the  EXAMPLES
        section).    The  existence  of  a ReadWrite mount
        point   for   root.cell    allows    the    system
        administrator  to  switch  onto a "ReadWrite" path
        and thus be  sure  he  or  she  is  accessing  the
        ReadWrite   version  of  a  volume  when  that  is
        important.

        The issuer creates  a  ReadWrite  mount  point  by
        adding the -rw flag.

   Dimension 3: Cellular versus Local

   The  third  dimension concerns which cell the volume resides
   in.  A cellular mount point indicates to the  Cache  Manager
   that  the  volume  resides  in a foreign cell (and specifies
   which one).  If the mount point is not  cellular,  then  the
   Cache  Manager  assumes  that the volume resides in the same
   cell as the mount point does.

   Normally, cellular mount points are used only at the  second
   level  in a cell's file tree (i.e., at the "cell" level just
   below /afs), to mount  the  root.cell  volumes  for  foreign
   cells  that  are  to  be  visible  in the local cell.  It is



   possible to create  cellular  mount  points  (mount  foreign
   volumes)  at  other  levels  in  the  tree.  Doing so is not
   recommended,  however,  as  it  can  make  it  difficult  to
   determine which cell a given pathname leads to.

   Cellular mount points can be either regular or ReadWrite:

      - A  regular cellular mount point not only tells the
        Cache Manager to cross into a  foreign  cell,  but
        also   to  access  the  ReadOnly  version  of  the
        indicated volume if possible.   The  advantage  is
        that the Cache Manager traverses a "ReadOnly path"
        in the foreign cell, even if the mount  point  for
        the   indicated  volume  resides  in  a  ReadWrite
        volume.  This is particularly useful when crossing
        into foreign cells that are too small to replicate
        their root.afs volume.

        To create a  regular  cellular  mount  point,  the
        issuer uses the -cell argument to specify the cell
        name, and adds the -root flag.

      - A ReadWrite cellular mount point tells  the  Cache
        Manager  to  cross  into a foreign cell and access
        the ReadWrite version of the volume (assuming that
        the  volume  does  not have a .backup or .readonly
        extension).  Use of this type of  mount  point  is
        discouraged,  because  accessing ReadWrite volumes
        means the File Server has to issue  callbacks,  an
        extra  load  it is not fair to impose from outside
        the  cell.    In  general,  only  a   cell's   own
        administrators   need   to  access  the  ReadWrite
        version of a volume.

        To create a ReadWrite cellular  mount  point,  the
        issuer uses the -cell argument to specify the cell
        name, and adds  both  the  -root  and  -rw  flags.
        Because  this is not recommended, no example of it
        appears below.

   Mounting foreign volumes in foreign cells

   In addition to mounting  volumes  in  the  local  cell,  the
   fs mkmount  allows a user who possesses the necessary access
   rights in a foreign cell to create a  regular,  non-cellular
   mount point in a foreign cell's file tree while working on a
   machine in his or her local  cell.    In  other  words,  the
   issuer can mount a volume from a foreign cell in that cell's
   file space as though he or she were working at a machine  in
   that cell.

   To  mount a foreign volume in foreign cell, specify the cell
   name with -cell, but do not use the -root flag.



   Distinguishing the types of mount points

   The output of fs lsmount uses various symbols to distinguish
   the different types of mount points.  See the Output section
   of that command's description.

ARGUMENTS

   -dir  names the directory to be created as a mount point  to
         the  named  volume.   It should not already exist.  If
         the issuer does not  specify  a  pathname,  the  mount
         point  is  created  as  a  subdirectory of the current
         working directory.

   -vol  names the volume to be mounted.  Add the .readonly  or
         .backup  extension  if  appropriate.   The volumeID is
         also acceptable.

         Note: When creating a cellular  mount  point,  do  not
         specify the cell name as part of this argument, as was
         necessary in previous versions of  AFS  that  did  not
         have  the -root flag.  Instead, include the -root flag
         and use the -cell argument to specify the  cell  name;
         the command interpreter will automatically prepend the
         cell name to the volume name, separating them  with  a
         colon.

   -cell names  the  cell  in  which  the volume resides.  When
         creating a cellular mount point, combine this argument
         with  the  -root flag.  When mounting a foreign volume
         in a foreign cell, use this argument alone.

   -rw   designates the mount point as ReadWrite, which  forces
         the Cache Manager to access only the ReadWrite copy of
         a volume that does not have  a  .backup  or  .readonly
         extension.    Without  this  flag,  the mount point is
         regular.

   -fast indicates that the VL Server  should  not  check  that
         there  is  a  VLDB entry for the volume to be mounted.
         By default, the VL Server  does  check  and  prints  a
         warning  message  if there is no VLDB entry; the mount
         point is created in any case.

   -root creates a cellular mount point.

   -help prints the online help entry for this command.  Do not
         provide  any  other  arguments or flags with this one.
         See section 3.1  in  the  Reference  Manual  for  more
         details.

EXAMPLES

   Note:    These  examples  illustrate  only  the  recommended
   combinations and use of arguments.  The  OUTPUT  section  of
   fs lsmount's  description  shows what each mount point looks
   like.

   The following creates a regular  mount  point.    It  mounts
   user.smith at /afs/transarc.com/usr/smith.



   % cd /afs/transarc.com/usr  % fs mk smith user.smith



   The  following  creates  both  a ReadWrite and regular mount
   point for the Transarc Corporation cell's root.cell  volume,
   in  that  cell's  file  tree.   It follows the convention of
   putting a period at the beginning  of  the  ReadWrite  mount
   point's name.

   % fs mk /afs/transarc.com root.cell  % fs mk
   /afs/.transarc.com root.cell -rw

   The  following  mounts  the  root.cell  volume  belonging to
   Carnegie Mellon University's Andrew  cell  in  the  Transarc
   Corporation  cell's  file tree, creating a regular, cellular
   mount  point  called  andrew.cmu.edu.    When   a   Transarc
   Corporation  Cache  Manager  encounters this mount point, it
   will cross into the Andrew cell on a ReadOnly path.

   % fs mk /afs/andrew.cmu.edu root.cell -c andrew.cmu.edu
   -root

   The following illustrates the creation of a mount point in a
   foreign  cell,  using  Transarc  Corporation's  regular cell
   (transarc.com)  as  the  local  cell  and  its   test   cell
   (test.transarc.com) as the foreign cell.  Suppose that while
   working on a machine belonging to the transarc.com  cell,  a
   Transarc Corporation user wants to mount a test.transarc.com
   volume            called            user.test5            at
   /afs/test.transarc.com/usr/test5.    She  has the INSERT and
   ADMINISTER rights for /afs/test.transarc.com/usr.  Note that
   the effect is just the same as if the issuer were working on
   a  machine  belonging  to  the  test.transarc.com  cell  and
   omitted the -c test.transarc.com part of the command.

   % cd /afs/test.transarc.com/usr  % fs mk test5 user.test5 -c
   test.transarc.com

PRIVILEGE REQUIRED

   Issuer  must  have  INSERT  and  ADMINISTER  access  for the
   directory that is to contain the mount point.

MORE INFORMATION

   fs lsmount fs rmmount
