# Copyright 2000, International Business Machines Corporation and others.
# All Rights Reserved.
# 
# This software has been released under the terms of the IBM Public
# License.  For details, see the LICENSE file in the top-level source
# directory or online at http://www.openafs.org/dl/license10.html

srcdir=@srcdir@

include @TOP_OBJDIR@/src/config/Makefile.config

# OS specific object files:
AFS_OS_OBJS = \
	osi_alloc.o \
	osi_cred.o \
	osi_groups.o \
	osi_inode.o \
	osi_file.o \
	osi_misc.o \
	osi_module.o \
	osi_sleep.o \
	osi_sysctl.o \
	osi_vfsops.o \
	osi_vm.o \
	osi_vnodeops.o 

AFS_OS_NFSOBJS =

AFS_OS_NONFSOBJS =

COMMON_KERN_CFLAGS=$(KERN_DBG) $(KERN_OPTMZ) @LINUX_GCC_KOPTS@

COMMON_DEFINES=-D__KERNEL__ -DKERNEL -D_KERNEL -DMODULE ${SMP_DEF}

LINUX_KERNEL_PATH=@LINUX_KERNEL_PATH@

# System specific build commands and flags
<i386_linux22 i386_linux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) @P5PLUS_KOPTS@
DEFINES = $(COMMON_DEFINES) -DCPU=586

<amd64_linux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) -mcmodel=kernel
DEFINES = $(COMMON_DEFINES) 

<i386_umlinux22 i386_umlinux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) @P5PLUS_KOPTS@ -I$(LINUX_KERNEL_PATH)/arch/um/include -I$(LINUX_KERNEL_PATH)/arch/um/kernel/tt/include -I$(LINUX_KERNEL_PATH)/arch/um/kernel/skas/include
DEFINES = $(COMMON_DEFINES) -DCPU=586

<alpha_linux_22 alpha_linux_24>
CCFLAGS = $(COMMON_KERN_CFLAGS) -mno-fp-regs -ffixed-8
DEFINES = $(COMMON_DEFINES)

<s390_linux22 s390_linux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) -fsigned-char
DEFINES = $(COMMON_DEFINES) -D__s390__ 

<sparc_linux22 sparc_linux24>
LD = ld -m elf32_sparc
CCFLAGS = $(COMMON_KERN_CFLAGS) -mcpu=v8 -mno-fpu -fcall-used-g5 -fcall-used-g7
DEFINES = $(COMMON_DEFINES) -DCPU=sparc

<sparc64_linux22 sparc64_linux24>
CC = sparc64-linux-gcc
LD = ld -m elf64_sparc
CCFLAGS = $(COMMON_KERN_CFLAGS) \
      -mcpu=ultrasparc -m64 -mno-fpu -mcmodel=medlow -ffixed-g4 -fcall-used-g5 -fcall-used-g7 -Wno-sign-compare
DEFINES = $(COMMON_DEFINES) -DCPU=sparc64

<ppc_linux22 ppc_linux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) -fsigned-char -msoft-float -fno-builtin -ffixed-r2
DEFINES = $(COMMON_DEFINES) -D__powerpc__

<parisc_linux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) -fsigned-char -mno-space-regs \
      -mfast-indirect-calls -mdisable-fpregs -ffunction-sections \
      -march=1.1 -mschedule=7100
DEFINES = $(COMMON_DEFINES) -D__linux__

<ia64_linux24>
CCFLAGS = $(COMMON_KERN_CFLAGS) -ffixed-r13 -mfixed-range=f10-f15,f32-f127 -falign-functions=32 -mb-step
DEFINES = $(COMMON_DEFINES)

<all>
INCLUDES = -I. -I../ -I${TOP_OBJDIR}/src/config

CFLAGS = $(CCFLAGS) $(DEFINES) $(INCLUDES)

# Name of directory to hold object files and libraries.
KOBJ = MODLOAD
MPS = @MPS@

# COMPDIRS is called in Makefile.common to do the actual builds.
COMPDIRS=linux_compdirs
INSTDIRS=linux_instdirs
DESTDIRS=linux_destdirs

include Makefile.common

LINUX_MODULE_NAME=
LOCAL_SMP_DEF=

setup:
	-$(RM) -f h net netinet sys rpc
	-ln -fs rx rpc
	for m in ${MPS} ; do \
		KDIR=$(KOBJ)-${LINUX_VERSION}${LINUX_MODULE_NAME}-$$m; \
		mkdir -p $${KDIR}; \
		ln -fs ../Makefile $${KDIR}/Makefile ; \
		ln -fs ../Makefile.common $${KDIR}/Makefile.common; \
		ln -fs ../config $${KDIR}/config; \
	done 
	
# Compile SP and MP clients as requested

${COMPDIRS} ${INSTDIRS} ${DESTDIRS}:
	$(RM) -f h 
	ln -fs ${LINUX_KERNEL_PATH}/include/linux h 
	$(RM) -f linux 
	ln -fs ${LINUX_KERNEL_PATH}/include/linux linux 
	$(RM) -f net 
	ln -fs ${LINUX_KERNEL_PATH}/include/net net 
	$(RM) -f netinet 
	ln -fs ${LINUX_KERNEL_PATH}/include/linux netinet 
	$(RM) -f sys
	ln -fs ${LINUX_KERNEL_PATH}/include/linux sys
	$(RM) -f asm-generic
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-generic asm-generic
	$(RM) -f asm
<parisc_linux22 parisc_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-parisc asm
<alpha_linux_22 alpha_linux_24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-alpha asm
<i386_linux22 i386_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-i386 asm
<i386_umlinux22 i386_umlinux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-um asm
<amd64_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-x86_64 asm
<s390_linux22 s390_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-s390 asm
<ppc_linux22 ppc_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-ppc asm 
<sparc_linux22 sparc_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-sparc asm
<sparc64_linux22 sparc64_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-sparc64 asm
<ia64_linux24>
	ln -fs ${LINUX_KERNEL_PATH}/include/asm-ia64 asm
<all>
	for m in ${MPS} ; do \
		KDIR=${KOBJ}-${LINUX_VERSION}${LINUX_MODULE_NAME}-$$m ; \
		echo Building in directory: $${KDIR} ; \
		if [ "$$m" = "MP" ] ; then \
			SMP_DEF="-DAFS_SMP @RHCONFIG_MP@ ${LOCAL_SMP_DEF}" ; \
			TARG="libafs.mp" ; \
		elif [ "$$m" = "EP" ] ; then \
			SMP_DEF="-DAFS_SMP @RHCONFIG_MP@ ${LOCAL_SMP_DEF}" ; \
			TARG="libafs.ep" ; \
		elif [ "$$m" = "BM" ] ; then \
			SMP_DEF="-DAFS_SMP @RHCONFIG_MP@ ${LOCAL_SMP_DEF}" ; \
			TARG="libafs.bm" ; \
		else  \
			SMP_DEF="@RHCONFIG_SP@ ${LOCAL_SMP_DEF}" ; \
			TARG=libafs ; \
		fi ; \
		cd $${KDIR} ; \
		$(MAKE) SMP_DEF="$${SMP_DEF}" $@_$${TARG} CLIENT=${LINUX_VERSION}${LINUX_MODULE_NAME} || exit $$?; \
		cd ../ ; \
	done

linux_compdirs_libafs: depsrcs libafs
linux_compdirs_libafs.mp: depsrcs libafs.mp
linux_compdirs_libafs.ep: depsrcs libafs.ep
linux_compdirs_libafs.bm: depsrcs libafs.bm
linux_instdirs_libafs: install_libafs
linux_instdirs_libafs.mp: install_libafs.mp
linux_instdirs_libafs.ep: install_libafs.ep
linux_instdirs_libafs.bm: install_libafs.bm
linux_destdirs_libafs: dest_libafs
linux_destdirs_libafs.mp: dest_libafs.mp
linux_destdirs_libafs.ep: dest_libafs.ep
linux_destdirs_libafs.bm: dest_libafs.bm


# Below this line are targets when in the COMMON directory:
# For Linux there is no kernel NFS server.
LIBAFS = libafs-${CLIENT}.o
LIBAFS_MP = libafs-${CLIENT}.mp.o
LIBAFS_EP = libafs-${CLIENT}.ep.o
LIBAFS_BM = libafs-${CLIENT}.bm.o

INST_LIBAFS = ${DESTDIR}${afskerneldir}/${LIBAFS}
INST_LIBAFS_MP = ${DESTDIR}${afskerneldir}/${LIBAFS_MP}
INST_LIBAFS_EP = ${DESTDIR}${afskerneldir}/${LIBAFS_EP}
INST_LIBAFS_BM = ${DESTDIR}${afskerneldir}/${LIBAFS_BM}

DEST_LIBAFS = ${DEST}/root.client/usr/vice/etc/modload/${LIBAFS}
DEST_LIBAFS_MP = ${DEST}/root.client/usr/vice/etc/modload/${LIBAFS_MP}
DEST_LIBAFS_EP = ${DEST}/root.client/usr/vice/etc/modload/${LIBAFS_EP}
DEST_LIBAFS_BM = ${DEST}/root.client/usr/vice/etc/modload/${LIBAFS_BM}


libafs:	$(LIBAFS) 
	echo SP Build Complete

libafs.mp: $(LIBAFS_MP)
	echo MP Build Complete

libafs.ep: $(LIBAFS_EP)
	echo EP Build Complete

libafs.bm: $(LIBAFS_BM)
	echo BM Build Complete

${LIBAFS}: $(AFSAOBJS) $(AFSNONFSOBJS)
	$(RM) -f $@
	$(LD) -r -o $@ $(AFSAOBJS) $(AFSNONFSOBJS)

${LIBAFS_MP}: $(AFSAOBJS) $(AFSNONFSOBJS)
	$(RM) -f $@
	$(LD) -r -o $@ $(AFSAOBJS) $(AFSNONFSOBJS)

${LIBAFS_EP}: $(AFSAOBJS) $(AFSNONFSOBJS)
	$(RM) -f $@
	$(LD) -r -o $@ $(AFSAOBJS) $(AFSNONFSOBJS)

${LIBAFS_BM}: $(AFSAOBJS) $(AFSNONFSOBJS)
	$(RM) -f $@
	$(LD) -r -o $@ $(AFSAOBJS) $(AFSNONFSOBJS)

install_libafs:	$(INST_LIBAFS) 
	echo SP Install Complete

install_libafs.mp: $(INST_LIBAFS_MP)
	echo MP Install Complete

install_libafs.ep: $(INST_LIBAFS_EP)
	echo EP Install Complete

install_libafs.bm: $(INST_LIBAFS_BM)
	echo BM Install Complete

dest_libafs:	$(DEST_LIBAFS) 
	echo SP Install Complete

dest_libafs.mp: $(DEST_LIBAFS_MP)
	echo MP Install Complete

dest_libafs.ep: $(DEST_LIBAFS_EP)
	echo EP Install Complete

dest_libafs.bm: $(DEST_LIBAFS_BM)
	echo BM Install Complete

$(INST_LIBAFS): $(LIBAFS)
	${INSTALL} -f $? $@

$(INST_LIBAFS_MP): $(LIBAFS_MP)
	${INSTALL} -f $? $@

$(INST_LIBAFS_EP): $(LIBAFS_EP)
	${INSTALL} -f $? $@

$(INST_LIBAFS_BM): $(LIBAFS_BM)
	${INSTALL} -f $? $@

$(DEST_LIBAFS): $(LIBAFS)
	${INSTALL} -f $? $@

$(DEST_LIBAFS_MP): $(LIBAFS_MP)
	${INSTALL} -f $? $@

$(DEST_LIBAFS_EP): $(LIBAFS_EP)
	${INSTALL} -f $? $@

$(DEST_LIBAFS_BM): $(LIBAFS_BM)
	${INSTALL} -f $? $@
